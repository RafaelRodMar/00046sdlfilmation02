/*****************************************************************************/
/*                      TECNICA FILMATION (3¦ PARTE)                         */
/*                                                                           */
/*      por: Jos‚ Antonio Acedo Mart¡n-Grande, miembro de "GOLDY GAMES"      */
/*                                                                           */
/*                      TEL: (91) 6 11 72 71 (MADRID)                        */
/*****************************************************************************/

/**************************** FICHEROS A INCLUIR  ****************************/

#include <dos.h>
#include <bios.h>
#include <conio.h>
#include <stdio.h>
#include <alloc.h>
#include <stdlib.h>

/******************************* DEFINICIONES ********************************/

#define ALFANUMERICO     3
#define GRAFICO         19

#define NUM_OBJETOS      6
#define NUM_ZONAS	 5

#define AUM_X           25
#define AUM_Z           30
#define DIS_X           24
#define DIS_Z           16
#define SALTO           57
#define ESC              1

#define ULTIMO          -1

/*********************** DECLARACIONES DE FUNCIONES **************************/

extern "C"
{
void  BORRA_ZONA_MEMORIA(char *, int);
void  COPIA_ZONA_MEMORIA(char *, char *);
void  DIBUJA_BLOQUE    (int *, char *, char *);
void  DIBUJA_BLOQUE_CUT(int *, char *, char *);
void  VUELCA_PANTALLA(int,int, int,int, int,int, char *);
void  SET_VECTORES(volatile char *);
void  UNSET_VECTORES(void);
void  asigna_modo_video(char);
void  lee_ficheros(const char *, char *);
void  descomprime_dibujo(char *);
void  asigna_rgb(char *);
void  asigna_memoria(void);
void  libera_memoria(void);
void  dibuja_zona(void);
void  error_memoria(void);
void  error_fichero(void);
void  salir_al_dos(void);
}

/*************************** VARIABLES GLOBALES /*****************************/

char *dir_carga_dibujos;
char *dir_dibujo1;
char *dir_muestra_dibujo1;
char *dir_zona_pantalla;
FILE *handle_dibujos;
char  mapa_teclado[256];
char  dibujo1[] = "filma_3.pcx";
int   logotipo_filmation  [6] = {   0,167,   0,182, 133,14 };
int   logotipo_parte3     [6] = { 133,167,   0,  0,  75,18 };
int   logotipo_goldy_games[6] = {   0,182, 206,182, 114,18 };

int   mapa_zona_1[][6] = {   0,  0, 144, 36, 32,15, /* suelo A */
                             0,  0, 112, 52, 32,15,
                             0,  0, 144, 52, 32,15,
                             0,  0, 176, 52, 32,15,
                             0,  0,  80, 68, 32,15,
                             0,  0, 112, 68, 32,15,
                             0,  0, 144, 68, 32,15,
                             0,  0, 176, 68, 32,15,
                             0,  0, 208, 68, 32,15,
                             0,  0,  48, 84, 32,15,
                             0,  0,  80, 84, 32,15,
                             0,  0, 112, 84, 32,15,
                             0,  0, 144, 84, 32,15,
                             0,  0, 176, 84, 32,15,
                             0,  0, 208, 84, 32,15,
                             0,  0, 240, 84, 32,15,
                             0,  0,  16,100, 32,15,
                             0,  0,  48,100, 32,15,
                             0,  0,  80,100, 32,15,
                             0,  0, 112,100, 32,15,
                             0,  0, 144,100, 32,15,
                             0,  0, 176,100, 32,15,
                             0,  0, 208,100, 32,15,
                             0,  0, 240,100, 32,15,
                             0,  0, 272,100, 32,15,
                             0,  0,  16,116, 32,15,
                             0,  0,  48,116, 32,15,
                             0,  0,  80,116, 32,15,
                             0,  0, 112,116, 32,15,
                             0,  0, 144,116, 32,15,
                             0,  0, 176,116, 32,15,
                             0,  0, 208,116, 32,15,
                             0,  0, 240,116, 32,15,
                             0,  0, 272,116, 32,15,
                             0,  0,  48,132, 32,15,
                             0,  0,  80,132, 32,15,
                             0,  0, 112,132, 32,15,
                             0,  0, 144,132, 32,15,
                             0,  0, 176,132, 32,15,
                             0,  0, 208,132, 32,15,
                             0,  0, 240,132, 32,15,
                             0,  0,  80,148, 32,15,
                             0,  0, 112,148, 32,15,
                             0,  0, 144,148, 32,15,
                             0,  0, 176,148, 32,15,
                             0,  0, 208,148, 32,15,
                             0,  0, 112,164, 32,15,
                             0,  0, 144,164, 32,15,
                             0,  0, 176,164, 32,15,
                             0,  0, 144,180, 32,15,

                            32,  0, 128, 44, 32,15, /* suelo B */
                            32,  0, 160, 44, 32,15,
                            32,  0,  96, 60, 32,15,
                            32,  0, 128, 60, 32,15,
                            32,  0, 160, 60, 32,15,
                            32,  0, 192, 60, 32,15,
                            32,  0,  64, 76, 32,15,
                            32,  0,  96, 76, 32,15,
                            32,  0, 128, 76, 32,15,
                            32,  0, 160, 76, 32,15,
                            32,  0, 192, 76, 32,15,
                            32,  0, 224, 76, 32,15,
                            32,  0,  32, 92, 32,15,
                            32,  0,  64, 92, 32,15,
                            32,  0,  96, 92, 32,15,
                            32,  0, 128, 92, 32,15,
                            32,  0, 160, 92, 32,15,
                            32,  0, 192, 92, 32,15,
                            32,  0, 224, 92, 32,15,
                            32,  0, 256, 92, 32,15,
                            32,  0,   0,108, 32,15,
                            32,  0,  32,108, 32,15,
                            32,  0,  64,108, 32,15,
                            32,  0,  96,108, 32,15,
                            32,  0, 128,108, 32,15,
                            32,  0, 160,108, 32,15,
                            32,  0, 192,108, 32,15,
                            32,  0, 224,108, 32,15,
                            32,  0, 256,108, 32,15,
                            32,  0, 288,108, 32,15,
                            32,  0,  32,124, 32,15,
                            32,  0,  64,124, 32,15,
                            32,  0,  96,124, 32,15,
                            32,  0, 128,124, 32,15,
                            32,  0, 160,124, 32,15,
                            32,  0, 192,124, 32,15,
                            32,  0, 224,124, 32,15,
                            32,  0, 256,124, 32,15,
                            32,  0,  64,140, 32,15,
                            32,  0,  96,140, 32,15,
                            32,  0, 128,140, 32,15,
                            32,  0, 160,140, 32,15,
                            32,  0, 192,140, 32,15,
                            32,  0, 224,140, 32,15,
                            32,  0,  96,156, 32,15,
                            32,  0, 128,156, 32,15,
                            32,  0, 160,156, 32,15,
                            32,  0, 192,156, 32,15,
                            32,  0, 128,172, 32,15,
                            32,  0, 160,172, 32,15,

                             0, 15,   0,116, 16,12, /* borde suelo izq */
                             0, 15,  16,124, 16,12,
                             0, 15,  32,132, 16,12,
                             0, 15,  48,140, 16,12,
                             0, 15,  64,148, 16,12,
                             0, 15,  80,156, 16,12,
                             0, 15,  96,164, 16,12,
                             0, 15, 112,172, 16,12,
                             0, 15, 128,180, 16,12,
                             0, 15, 144,188, 16,12,

                            16, 15, 304,116, 16,12, /* borde suelo der */
                            16, 15, 288,124, 16,12,
                            16, 15, 272,132, 16,12,
                            16, 15, 256,140, 16,12,
                            16, 15, 240,148, 16,12,
                            16, 15, 224,156, 16,12,
                            16, 15, 208,164, 16,12,
                            16, 15, 192,172, 16,12,
                            16, 15, 176,180, 16,12,
			    16, 15, 160,188, 16,12,

			   ULTIMO,

                           288,  0, 128,-28, 32,79, /* pared izq */
                           288,  0,  96,-12, 32,79,
                           288,  0,  64,  4, 32,79,
                           288,  0,  32, 20, 32,79,
                           288,  0,   0, 36, 32,79,

                           256,  0, 160,-28, 32,79, /* pared der */
                           256,  0, 192,-12, 32,79,
                           256,  0, 224,  4, 32,79,
                           256,  0, 256, 20, 32,79,
			   256,  0, 288, 36, 32,79,

                           ULTIMO
			 };

int   mapa_zona_2[][6] = {   0, 27, 144, 36, 32,15, /* suelo A */
			     0, 27, 112, 52, 32,15,
			     0, 27, 144, 52, 32,15,
			     0, 27, 176, 52, 32,15,
			     0, 27,  80, 68, 32,15,
			     0, 27, 112, 68, 32,15,
			     0, 27, 144, 68, 32,15,
			     0, 27, 176, 68, 32,15,
			     0, 27, 208, 68, 32,15,
			     0, 27,  48, 84, 32,15,
			     0, 27,  80, 84, 32,15,
			     0, 27, 112, 84, 32,15,
			     0, 27, 144, 84, 32,15,
			     0, 27, 176, 84, 32,15,
			     0, 27, 208, 84, 32,15,
			     0, 27, 240, 84, 32,15,
			     0, 27,  16,100, 32,15,
			     0, 27,  48,100, 32,15,
			     0, 27,  80,100, 32,15,
			     0, 27, 112,100, 32,15,
			     0, 27, 144,100, 32,15,
			     0, 27, 176,100, 32,15,
			     0, 27, 208,100, 32,15,
			     0, 27, 240,100, 32,15,
			     0, 27, 272,100, 32,15,
			     0, 27,  16,116, 32,15,
			     0, 27,  48,116, 32,15,
			     0, 27,  80,116, 32,15,
			     0, 27, 112,116, 32,15,
			     0, 27, 144,116, 32,15,
			     0, 27, 176,116, 32,15,
			     0, 27, 208,116, 32,15,
			     0, 27, 240,116, 32,15,
			     0, 27, 272,116, 32,15,
			     0, 27,  48,132, 32,15,
			     0, 27,  80,132, 32,15,
			     0, 27, 112,132, 32,15,
			     0, 27, 144,132, 32,15,
			     0, 27, 176,132, 32,15,
			     0, 27, 208,132, 32,15,
			     0, 27, 240,132, 32,15,
			     0, 27,  80,148, 32,15,
			     0, 27, 112,148, 32,15,
			     0, 27, 144,148, 32,15,
			     0, 27, 176,148, 32,15,
			     0, 27, 208,148, 32,15,
			     0, 27, 112,164, 32,15,
			     0, 27, 144,164, 32,15,
			     0, 27, 176,164, 32,15,
			     0, 27, 144,180, 32,15,

			    32, 27, 128, 44, 32,15, /* suelo B */
			    32, 27, 160, 44, 32,15,
			    32, 27,  96, 60, 32,15,
			    32, 27, 128, 60, 32,15,
			    32, 27, 160, 60, 32,15,
			    32, 27, 192, 60, 32,15,
			    32, 27,  64, 76, 32,15,
			    32, 27,  96, 76, 32,15,
			    32, 27, 128, 76, 32,15,
			    32, 27, 160, 76, 32,15,
			    32, 27, 192, 76, 32,15,
			    32, 27, 224, 76, 32,15,
			    32, 27,  32, 92, 32,15,
			    32, 27,  64, 92, 32,15,
			    32, 27,  96, 92, 32,15,
			    32, 27, 128, 92, 32,15,
			    32, 27, 160, 92, 32,15,
			    32, 27, 192, 92, 32,15,
			    32, 27, 224, 92, 32,15,
			    32, 27, 256, 92, 32,15,
			    32, 27,   0,108, 32,15,
			    32, 27,  32,108, 32,15,
			    32, 27,  64,108, 32,15,
			    32, 27,  96,108, 32,15,
			    32, 27, 128,108, 32,15,
			    32, 27, 160,108, 32,15,
			    32, 27, 192,108, 32,15,
			    32, 27, 224,108, 32,15,
			    32, 27, 256,108, 32,15,
			    32, 27, 288,108, 32,15,
			    32, 27,  32,124, 32,15,
			    32, 27,  64,124, 32,15,
			    32, 27,  96,124, 32,15,
			    32, 27, 128,124, 32,15,
			    32, 27, 160,124, 32,15,
			    32, 27, 192,124, 32,15,
			    32, 27, 224,124, 32,15,
			    32, 27, 256,124, 32,15,
			    32, 27,  64,140, 32,15,
			    32, 27,  96,140, 32,15,
			    32, 27, 128,140, 32,15,
			    32, 27, 160,140, 32,15,
			    32, 27, 192,140, 32,15,
			    32, 27, 224,140, 32,15,
			    32, 27,  96,156, 32,15,
			    32, 27, 128,156, 32,15,
			    32, 27, 160,156, 32,15,
			    32, 27, 192,156, 32,15,
			    32, 27, 128,172, 32,15,
			    32, 27, 160,172, 32,15,

			     0, 42,   0,116, 16,12, /* borde suelo izq */
			     0, 42,  16,124, 16,12,
			     0, 42,  32,132, 16,12,
			     0, 42,  48,140, 16,12,
			     0, 42,  64,148, 16,12,
			     0, 42,  80,156, 16,12,
			     0, 42,  96,164, 16,12,
			     0, 42, 112,172, 16,12,
			     0, 42, 128,180, 16,12,
			     0, 42, 144,188, 16,12,

			    16, 42, 304,116, 16,12, /* borde suelo der */
			    16, 42, 288,124, 16,12,
			    16, 42, 272,132, 16,12,
			    16, 42, 256,140, 16,12,
			    16, 42, 240,148, 16,12,
			    16, 42, 224,156, 16,12,
			    16, 42, 208,164, 16,12,
			    16, 42, 192,172, 16,12,
			    16, 42, 176,180, 16,12,
			    16, 42, 160,188, 16,12,

                           192,  0, 160,-28, 32,79, /* pared der */
			   192,  0, 192,-12, 32,79,
			   192,  0, 224,  4, 32,79,
			   192,  0, 256, 20, 32,79,
			   192,  0, 288, 36, 32,79,

			   ULTIMO,

			   224,  0, 128,-28, 32,79, /* pared izq */
			   224,  0,  96,-12, 32,79,
			   224,  0,  64,  4, 32,79,
			   224,  0,  32, 20, 32,79,
			   224,  0,   0, 36, 32,79,

                           ULTIMO
			 };

int   mapa_zona_3[][6] = {   0, 54, 144, 36, 32,15, /* suelo A */
			     0, 54, 112, 52, 32,15,
			     0, 54, 144, 52, 32,15,
			     0, 54, 176, 52, 32,15,
			     0, 54,  80, 68, 32,15,
			     0, 54, 112, 68, 32,15,
			     0, 54, 144, 68, 32,15,
			     0, 54, 176, 68, 32,15,
			     0, 54, 208, 68, 32,15,
			     0, 54,  48, 84, 32,15,
			     0, 54,  80, 84, 32,15,
			     0, 54, 112, 84, 32,15,
			     0, 54, 144, 84, 32,15,
			     0, 54, 176, 84, 32,15,
			     0, 54, 208, 84, 32,15,
			     0, 54, 240, 84, 32,15,
			     0, 54,  16,100, 32,15,
			     0, 54,  48,100, 32,15,
			     0, 54,  80,100, 32,15,
			     0, 54, 112,100, 32,15,
			     0, 54, 144,100, 32,15,
			     0, 54, 176,100, 32,15,
			     0, 54, 208,100, 32,15,
			     0, 54, 240,100, 32,15,
			     0, 54, 272,100, 32,15,
			     0, 54,  16,116, 32,15,
			     0, 54,  48,116, 32,15,
			     0, 54,  80,116, 32,15,
			     0, 54, 112,116, 32,15,
			     0, 54, 144,116, 32,15,
			     0, 54, 176,116, 32,15,
			     0, 54, 208,116, 32,15,
			     0, 54, 240,116, 32,15,
			     0, 54, 272,116, 32,15,
			     0, 54,  48,132, 32,15,
			     0, 54,  80,132, 32,15,
			     0, 54, 112,132, 32,15,
			     0, 54, 144,132, 32,15,
			     0, 54, 176,132, 32,15,
			     0, 54, 208,132, 32,15,
			     0, 54, 240,132, 32,15,
			     0, 54,  80,148, 32,15,
			     0, 54, 112,148, 32,15,
			     0, 54, 144,148, 32,15,
			     0, 54, 176,148, 32,15,
			     0, 54, 208,148, 32,15,
			     0, 54, 112,164, 32,15,
			     0, 54, 144,164, 32,15,
			     0, 54, 176,164, 32,15,
			     0, 54, 144,180, 32,15,

			    32, 54, 128, 44, 32,15, /* suelo B */
			    32, 54, 160, 44, 32,15,
			    32, 54,  96, 60, 32,15,
			    32, 54, 128, 60, 32,15,
			    32, 54, 160, 60, 32,15,
			    32, 54, 192, 60, 32,15,
			    32, 54,  64, 76, 32,15,
			    32, 54,  96, 76, 32,15,
			    32, 54, 128, 76, 32,15,
			    32, 54, 160, 76, 32,15,
			    32, 54, 192, 76, 32,15,
			    32, 54, 224, 76, 32,15,
			    32, 54,  32, 92, 32,15,
			    32, 54,  64, 92, 32,15,
			    32, 54,  96, 92, 32,15,
			    32, 54, 128, 92, 32,15,
			    32, 54, 160, 92, 32,15,
			    32, 54, 192, 92, 32,15,
			    32, 54, 224, 92, 32,15,
			    32, 54, 256, 92, 32,15,
			    32, 54,   0,108, 32,15,
			    32, 54,  32,108, 32,15,
			    32, 54,  64,108, 32,15,
			    32, 54,  96,108, 32,15,
			    32, 54, 128,108, 32,15,
			    32, 54, 160,108, 32,15,
			    32, 54, 192,108, 32,15,
			    32, 54, 224,108, 32,15,
			    32, 54, 256,108, 32,15,
			    32, 54, 288,108, 32,15,
			    32, 54,  32,124, 32,15,
			    32, 54,  64,124, 32,15,
			    32, 54,  96,124, 32,15,
			    32, 54, 128,124, 32,15,
			    32, 54, 160,124, 32,15,
			    32, 54, 192,124, 32,15,
			    32, 54, 224,124, 32,15,
			    32, 54, 256,124, 32,15,
			    32, 54,  64,140, 32,15,
			    32, 54,  96,140, 32,15,
			    32, 54, 128,140, 32,15,
			    32, 54, 160,140, 32,15,
			    32, 54, 192,140, 32,15,
			    32, 54, 224,140, 32,15,
			    32, 54,  96,156, 32,15,
			    32, 54, 128,156, 32,15,
			    32, 54, 160,156, 32,15,
			    32, 54, 192,156, 32,15,
			    32, 54, 128,172, 32,15,
			    32, 54, 160,172, 32,15,

			     0, 69,   0,116, 16,12, /* borde suelo izq */
			     0, 69,  16,124, 16,12,
			     0, 69,  32,132, 16,12,
			     0, 69,  48,140, 16,12,
			     0, 69,  64,148, 16,12,
			     0, 69,  80,156, 16,12,
			     0, 69,  96,164, 16,12,
			     0, 69, 112,172, 16,12,
			     0, 69, 128,180, 16,12,
			     0, 69, 144,188, 16,12,

			    16, 69, 304,116, 16,12, /* borde suelo der */
			    16, 69, 288,124, 16,12,
			    16, 69, 272,132, 16,12,
			    16, 69, 256,140, 16,12,
			    16, 69, 240,148, 16,12,
			    16, 69, 224,156, 16,12,
			    16, 69, 208,164, 16,12,
			    16, 69, 192,172, 16,12,
			    16, 69, 176,180, 16,12,
			    16, 69, 160,188, 16,12,

			   288, 79, 128,-28, 32,79, /* pared izq */
			   288, 79,  96,-12, 32,79,
			   288, 79,  64,  4, 32,79,
			   288, 79,  32, 20, 32,79,
			   288, 79,   0, 36, 32,79,

			   256, 79, 160,-28, 32,79, /* pared der */
			   256, 79, 192,-12, 32,79,
			   256, 79, 224,  4, 32,79,
			   256, 79, 256, 20, 32,79,
			   256, 79, 288, 36, 32,79,

                           ULTIMO
			 };

int   mapa_zona_4[][6] = {   0, 81, 144, 36, 32,15, /* suelo A */
			     0, 81, 112, 52, 32,15,
			     0, 81, 144, 52, 32,15,
			     0, 81, 176, 52, 32,15,
			     0, 81,  80, 68, 32,15,
			     0, 81, 112, 68, 32,15,
			     0, 81, 144, 68, 32,15,
			     0, 81, 176, 68, 32,15,
			     0, 81, 208, 68, 32,15,
			     0, 81,  48, 84, 32,15,
			     0, 81,  80, 84, 32,15,
			     0, 81, 112, 84, 32,15,
			     0, 81, 144, 84, 32,15,
			     0, 81, 176, 84, 32,15,
			     0, 81, 208, 84, 32,15,
			     0, 81, 240, 84, 32,15,
			     0, 81,  16,100, 32,15,
			     0, 81,  48,100, 32,15,
			     0, 81,  80,100, 32,15,
			     0, 81, 112,100, 32,15,
			     0, 81, 144,100, 32,15,
			     0, 81, 176,100, 32,15,
			     0, 81, 208,100, 32,15,
			     0, 81, 240,100, 32,15,
			     0, 81, 272,100, 32,15,
			     0, 81,  16,116, 32,15,
			     0, 81,  48,116, 32,15,
			     0, 81,  80,116, 32,15,
			     0, 81, 112,116, 32,15,
			     0, 81, 144,116, 32,15,
			     0, 81, 176,116, 32,15,
			     0, 81, 208,116, 32,15,
			     0, 81, 240,116, 32,15,
			     0, 81, 272,116, 32,15,
			     0, 81,  48,132, 32,15,
			     0, 81,  80,132, 32,15,
			     0, 81, 112,132, 32,15,
			     0, 81, 144,132, 32,15,
			     0, 81, 176,132, 32,15,
			     0, 81, 208,132, 32,15,
			     0, 81, 240,132, 32,15,
			     0, 81,  80,148, 32,15,
			     0, 81, 112,148, 32,15,
			     0, 81, 144,148, 32,15,
			     0, 81, 176,148, 32,15,
			     0, 81, 208,148, 32,15,
			     0, 81, 112,164, 32,15,
			     0, 81, 144,164, 32,15,
			     0, 81, 176,164, 32,15,
			     0, 81, 144,180, 32,15,

			    32, 81, 128, 44, 32,15, /* suelo B */
			    32, 81, 160, 44, 32,15,
			    32, 81,  96, 60, 32,15,
			    32, 81, 128, 60, 32,15,
			    32, 81, 160, 60, 32,15,
			    32, 81, 192, 60, 32,15,
			    32, 81,  64, 76, 32,15,
			    32, 81,  96, 76, 32,15,
			    32, 81, 128, 76, 32,15,
			    32, 81, 160, 76, 32,15,
			    32, 81, 192, 76, 32,15,
			    32, 81, 224, 76, 32,15,
			    32, 81,  32, 92, 32,15,
			    32, 81,  64, 92, 32,15,
			    32, 81,  96, 92, 32,15,
			    32, 81, 128, 92, 32,15,
			    32, 81, 160, 92, 32,15,
			    32, 81, 192, 92, 32,15,
			    32, 81, 224, 92, 32,15,
			    32, 81, 256, 92, 32,15,
			    32, 81,   0,108, 32,15,
			    32, 81,  32,108, 32,15,
			    32, 81,  64,108, 32,15,
			    32, 81,  96,108, 32,15,
			    32, 81, 128,108, 32,15,
			    32, 81, 160,108, 32,15,
			    32, 81, 192,108, 32,15,
			    32, 81, 224,108, 32,15,
			    32, 81, 256,108, 32,15,
			    32, 81, 288,108, 32,15,
			    32, 81,  32,124, 32,15,
			    32, 81,  64,124, 32,15,
			    32, 81,  96,124, 32,15,
			    32, 81, 128,124, 32,15,
			    32, 81, 160,124, 32,15,
			    32, 81, 192,124, 32,15,
			    32, 81, 224,124, 32,15,
			    32, 81, 256,124, 32,15,
			    32, 81,  64,140, 32,15,
			    32, 81,  96,140, 32,15,
			    32, 81, 128,140, 32,15,
			    32, 81, 160,140, 32,15,
			    32, 81, 192,140, 32,15,
			    32, 81, 224,140, 32,15,
			    32, 81,  96,156, 32,15,
			    32, 81, 128,156, 32,15,
			    32, 81, 160,156, 32,15,
			    32, 81, 192,156, 32,15,
			    32, 81, 128,172, 32,15,
			    32, 81, 160,172, 32,15,

			     0, 96,   0,116, 16,12, /* borde suelo izq */
			     0, 96,  16,124, 16,12,
			     0, 96,  32,132, 16,12,
			     0, 96,  48,140, 16,12,
			     0, 96,  64,148, 16,12,
			     0, 96,  80,156, 16,12,
			     0, 96,  96,164, 16,12,
			     0, 96, 112,172, 16,12,
			     0, 96, 128,180, 16,12,
			     0, 96, 144,188, 16,12,

			    16, 96, 304,116, 16,12, /* borde suelo der */
			    16, 96, 288,124, 16,12,
			    16, 96, 272,132, 16,12,
			    16, 96, 256,140, 16,12,
			    16, 96, 240,148, 16,12,
			    16, 96, 224,156, 16,12,
			    16, 96, 208,164, 16,12,
			    16, 96, 192,172, 16,12,
			    16, 96, 176,180, 16,12,
			    16, 96, 160,188, 16,12,

			   224, 79, 128,-28, 32,79, /* pared izq */
			   224, 79,  96,-12, 32,79,
			   224, 79,  64,  4, 32,79,
			   224, 79,  32, 20, 32,79,
			   224, 79,   0, 36, 32,79,

			   192, 79, 160,-28, 32,79, /* pared der */
			   192, 79, 192,-12, 32,79,
			   192, 79, 224,  4, 32,79,
			   192, 79, 256, 20, 32,79,
			   192, 79, 288, 36, 32,79,

                           ULTIMO
			 };

int   mapa_zona_5[][6] = {   0,108, 144, 36, 32,15, /* suelo A */
			     0,108, 112, 52, 32,15,
			     0,108, 144, 52, 32,15,
			     0,108, 176, 52, 32,15,
			     0,108,  80, 68, 32,15,
			     0,108, 112, 68, 32,15,
			     0,108, 144, 68, 32,15,
			     0,108, 176, 68, 32,15,
			     0,108, 208, 68, 32,15,
			     0,108,  48, 84, 32,15,
			     0,108,  80, 84, 32,15,
			     0,108, 112, 84, 32,15,
			     0,108, 144, 84, 32,15,
			     0,108, 176, 84, 32,15,
			     0,108, 208, 84, 32,15,
			     0,108, 240, 84, 32,15,
			     0,108,  16,100, 32,15,
			     0,108,  48,100, 32,15,
			     0,108,  80,100, 32,15,
			     0,108, 112,100, 32,15,
			     0,108, 144,100, 32,15,
			     0,108, 176,100, 32,15,
			     0,108, 208,100, 32,15,
			     0,108, 240,100, 32,15,
			     0,108, 272,100, 32,15,
			     0,108,  16,116, 32,15,
			     0,108,  48,116, 32,15,
			     0,108,  80,116, 32,15,
			     0,108, 112,116, 32,15,
			     0,108, 144,116, 32,15,
			     0,108, 176,116, 32,15,
			     0,108, 208,116, 32,15,
			     0,108, 240,116, 32,15,
			     0,108, 272,116, 32,15,
			     0,108,  48,132, 32,15,
			     0,108,  80,132, 32,15,
			     0,108, 112,132, 32,15,
			     0,108, 144,132, 32,15,
			     0,108, 176,132, 32,15,
			     0,108, 208,132, 32,15,
			     0,108, 240,132, 32,15,
			     0,108,  80,148, 32,15,
			     0,108, 112,148, 32,15,
			     0,108, 144,148, 32,15,
			     0,108, 176,148, 32,15,
			     0,108, 208,148, 32,15,
			     0,108, 112,164, 32,15,
			     0,108, 144,164, 32,15,
			     0,108, 176,164, 32,15,
			     0,108, 144,180, 32,15,

			    32,108, 128, 44, 32,15, /* suelo B */
			    32,108, 160, 44, 32,15,
			    32,108,  96, 60, 32,15,
			    32,108, 128, 60, 32,15,
			    32,108, 160, 60, 32,15,
			    32,108, 192, 60, 32,15,
			    32,108,  64, 76, 32,15,
			    32,108,  96, 76, 32,15,
			    32,108, 128, 76, 32,15,
			    32,108, 160, 76, 32,15,
			    32,108, 192, 76, 32,15,
			    32,108, 224, 76, 32,15,
			    32,108,  32, 92, 32,15,
			    32,108,  64, 92, 32,15,
			    32,108,  96, 92, 32,15,
			    32,108, 128, 92, 32,15,
			    32,108, 160, 92, 32,15,
			    32,108, 192, 92, 32,15,
			    32,108, 224, 92, 32,15,
			    32,108, 256, 92, 32,15,
			    32,108,   0,108, 32,15,
			    32,108,  32,108, 32,15,
			    32,108,  64,108, 32,15,
			    32,108,  96,108, 32,15,
			    32,108, 128,108, 32,15,
			    32,108, 160,108, 32,15,
			    32,108, 192,108, 32,15,
			    32,108, 224,108, 32,15,
			    32,108, 256,108, 32,15,
			    32,108, 288,108, 32,15,
			    32,108,  32,124, 32,15,
			    32,108,  64,124, 32,15,
			    32,108,  96,124, 32,15,
			    32,108, 128,124, 32,15,
			    32,108, 160,124, 32,15,
			    32,108, 192,124, 32,15,
			    32,108, 224,124, 32,15,
			    32,108, 256,124, 32,15,
			    32,108,  64,140, 32,15,
			    32,108,  96,140, 32,15,
			    32,108, 128,140, 32,15,
			    32,108, 160,140, 32,15,
			    32,108, 192,140, 32,15,
			    32,108, 224,140, 32,15,
			    32,108,  96,156, 32,15,
			    32,108, 128,156, 32,15,
			    32,108, 160,156, 32,15,
			    32,108, 192,156, 32,15,
			    32,108, 128,172, 32,15,
			    32,108, 160,172, 32,15,

			     0,123,   0,116, 16,12, /* borde suelo izq */
			     0,123,  16,124, 16,12,
			     0,123,  32,132, 16,12,
			     0,123,  48,140, 16,12,
			     0,123,  64,148, 16,12,
			     0,123,  80,156, 16,12,
			     0,123,  96,164, 16,12,
			     0,123, 112,172, 16,12,
			     0,123, 128,180, 16,12,
			     0,123, 144,188, 16,12,

			    16,123, 304,116, 16,12, /* borde suelo der */
			    16,123, 288,124, 16,12,
			    16,123, 272,132, 16,12,
			    16,123, 256,140, 16,12,
			    16,123, 240,148, 16,12,
			    16,123, 224,156, 16,12,
			    16,123, 208,164, 16,12,
			    16,123, 192,172, 16,12,
			    16,123, 176,180, 16,12,
			    16,123, 160,188, 16,12,

			   160, 79, 128,-28, 32,79, /* pared izq */
			   160, 79,  96,-12, 32,79,
			   160, 79,  64,  4, 32,79,
			   160, 79,  32, 20, 32,79,
			   160, 79,   0, 36, 32,79,

			   ULTIMO,

			   128, 79, 160,-28, 32,79, /* pared der */
			   128, 79, 192,-12, 32,79,
			   128, 79, 224,  4, 32,79,
			   128, 79, 256, 20, 32,79,
			   128, 79, 288, 36, 32,79,

                           ULTIMO
			 };

int   objetos_zona[NUM_ZONAS][NUM_OBJETOS][7] = { 64,  0,  0, 0, 0, 32,30, /*BOLA*/
						  64, 30, 28, 0,44, 32,30,
						  96, 30, 28, 8,44, 32,30,
						 128, 30, 52, 0,44, 32,30,
						 160, 30, 52, 8,44, 32,30,
						  64, 30, 60, 0,34, 32,30,

						  64,  0,  0, 0, 0, 32,30, /*BOLA*/
						  64, 30, 48, 0,44, 32,30,
						  96, 30, 48, 8,44, 32,30,
						 128, 30, 52, 0,14, 32,30,
						 160, 30, 52, 8,14, 32,30,
						  96, 30, 22, 0,51, 32,30,

						  64,  0,  0, 0, 0, 32,30, /*BOLA*/
						  64, 30, 15, 0,24, 32,30,
						  96, 30, 33, 0,50, 32,30,
						 128, 30, 61, 0,12, 32,30,
						 160, 30, 43, 0,27, 32,30,
						 128, 30, 52, 0,60, 32,30,

						  64,  0,  0, 0, 0, 32,30, /*BOLA*/
						  64, 30, 38, 0,54, 32,30,
						  96, 30, 38, 8,54, 32,30,
						 128, 30, 62, 0,24, 32,30,
						 160, 30, 12, 0,15, 32,30,
						 160, 30, 27, 0,38, 32,30,

						  64,  0,  0, 0, 0, 32,30, /*BOLA*/
						  64, 30, 17, 0,39, 32,30,
						  96, 30, 55, 0,31, 32,30,
						 128, 30, 31, 0,50, 32,30,
						 160, 30, 31, 8,50, 32,30,
						  64, 30, 42, 0,26, 32,30
						};

int   zona;
int   zona_x;
int   zona_z;
int   x[NUM_OBJETOS];
int   y[NUM_OBJETOS];
int   z[NUM_OBJETOS];
int   pos_objeto[6];
int   dist[NUM_OBJETOS][2];
int   sentido=AUM_X;
int   xyz_bola_a[7] = {  64,  0,  0, 0, 0, 32,30 };
int   xyz_bola_b[7] = {  96,  0,  0, 0, 0, 32,30 };
int   xyz_bola_c[7] = { 128,  0,  0, 0, 0, 32,30 };
int   xyz_bola_d[7] = { 160,  0,  0, 0, 0, 32,30 };

int   mapa[5][5]={
		   0,0,0,0,0,
		   0,0,3,0,0,
		   0,4,1,2,0,
		   0,0,5,0,0,
		   0,0,0,0,0
		 };

/********************************* PROGRAMA **********************************/

void main(void)
{
	int obj, choque, xA, yA, zA, temp, n, m;

        asigna_memoria();
        asigna_modo_video(GRAFICO);
        lee_ficheros(dibujo1, dir_dibujo1);
        SET_VECTORES(mapa_teclado);

	zona_x=2; zona_z=2; dibuja_zona();

        while(mapa_teclado[0]!=ESC)
	{
	  zona=mapa[zona_z][zona_x]-1;

          COPIA_ZONA_MEMORIA(dir_muestra_dibujo1, dir_zona_pantalla);

	  for(n=0; n<NUM_OBJETOS; n++)		// c lculo de las distancias
	  {
	    x[n]=objetos_zona[zona][n][2];
	    y[n]=objetos_zona[zona][n][3];
	    z[n]=objetos_zona[zona][n][4];

	    dist[n][0]=x[n]+y[n]+z[n];
	    dist[n][1]=n;
	  }

	  for(n=NUM_OBJETOS-1; n>0; n--)	// ordenaci¢n de los objetos
	  {
	    for(m=0; m<n; m++)
	    {
	      if(dist[m][0] > dist[m+1][0])
	      {
		temp=dist[m][0]; dist[m][0]=dist[m+1][0]; dist[m+1][0]=temp;
		temp=dist[m][1]; dist[m][1]=dist[m+1][1]; dist[m+1][1]=temp;
	      }
	    }
	  }

	  for(n=0; n<NUM_OBJETOS; n++)	// movimiento y choques del espec¡men
	  {
	    if(dist[n][1]==0)
	    {
	      xA=objetos_zona[zona][0][2];
	      yA=objetos_zona[zona][0][3];
	      zA=objetos_zona[zona][0][4];

	      choque=0;
	      if(mapa_teclado[0]==AUM_X) { sentido=AUM_X;
		if(xA < 72) {
		  for(obj=1; obj<NUM_OBJETOS; obj++) {
		    if( ! (x[obj]>x[0]+8 || x[obj]<x[0]+8 || y[obj]-y[0]>=8 || y[0]-y[obj]>=8 || z[obj]-z[0]>=8 || z[0]-z[obj]>=8))
		      choque=1;
		  }
		  if(choque==0) { xA++; objetos_zona[zona][0][2]++; }
		}
		else if(mapa[zona_z][zona_x+1]!=0)
		{
		  BORRA_ZONA_MEMORIA(dir_zona_pantalla,   0);
		  zona_x++;
		  zona=mapa[zona_z][zona_x]-1;
		  objetos_zona[zona][0][2]=0;
		  objetos_zona[zona][0][3]=yA;
		  objetos_zona[zona][0][4]=zA;
		  dibuja_zona();
		  COPIA_ZONA_MEMORIA(dir_muestra_dibujo1, dir_zona_pantalla);
		  break;
		}
	      }

	      choque=0;
	      if(mapa_teclado[0]==AUM_Z) { sentido=AUM_Z;
		if(zA < 72) {
		  for(obj=1; obj<NUM_OBJETOS; obj++) {
		    if( ! (x[obj]-x[0]>=8 || x[0]-x[obj]>=8 || y[obj]-y[0]>=8 || y[0]-y[obj]>=8 || z[obj]>z[0]+8 || z[obj]<z[0]+8))
		      choque=1;
		  }
		  if(choque==0) { zA++; objetos_zona[zona][0][4]++; }
		}
		else if(mapa[zona_z+1][zona_x]!=0)
		{
		  BORRA_ZONA_MEMORIA(dir_muestra_dibujo1, 0);
		  zona_z++;
		  zona=mapa[zona_z][zona_x]-1;
		  objetos_zona[zona][0][2]=xA;
		  objetos_zona[zona][0][3]=yA;
		  objetos_zona[zona][0][4]=0;
		  dibuja_zona();
		  COPIA_ZONA_MEMORIA(dir_muestra_dibujo1, dir_zona_pantalla);
		  break;
		}
	      }

	      choque=0;
	      if(mapa_teclado[0]==DIS_X) { sentido=DIS_X;
		if(xA > 0) {
		  for(obj=1; obj<NUM_OBJETOS; obj++) {
		    if( ! (x[obj]<x[0]-8 || x[obj]>x[0]-8 || y[obj]-y[0]>=8 || y[0]-y[obj]>=8 || z[obj]-z[0]>=8 || z[0]-z[obj]>=8))
		      choque=1;
		  }
		  if(choque==0) { xA--; objetos_zona[zona][0][2]--; }
		}
		else if(mapa[zona_z][zona_x-1]!=0)
		{
		  BORRA_ZONA_MEMORIA(dir_muestra_dibujo1, 0);
		  VUELCA_PANTALLA(0,0, 0,0, 320,200, dir_zona_pantalla);
		  zona_x--;
		  zona=mapa[zona_z][zona_x]-1;
		  objetos_zona[zona][0][2]=72;
		  objetos_zona[zona][0][3]=yA;
		  objetos_zona[zona][0][4]=zA;
		  dibuja_zona();
		  COPIA_ZONA_MEMORIA(dir_muestra_dibujo1, dir_zona_pantalla);
		  break;
		}
	      }

	      choque=0;
	      if(mapa_teclado[0]==DIS_Z) { sentido=DIS_Z;
		if(zA > 0) {
		  for(obj=1; obj<NUM_OBJETOS; obj++) {
		    if( ! (x[obj]-x[0]>=8 || x[0]-x[obj]>=8 || y[obj]-y[0]>=8 || y[0]-y[obj]>=8 || z[obj]<z[0]-8 || z[obj]>z[0]-8))
		      choque=1;
		  }
		  if(choque==0) { zA--; objetos_zona[zona][0][4]--; }
		}
		else if(mapa[zona_z-1][zona_x]!=0)
		{
		  BORRA_ZONA_MEMORIA(dir_muestra_dibujo1, 0);
		  VUELCA_PANTALLA(0,0, 0,0, 320,200, dir_zona_pantalla);
		  zona_z--;
		  zona=mapa[zona_z][zona_x]-1;
		  objetos_zona[zona][0][2]=xA;
		  objetos_zona[zona][0][3]=yA;
		  objetos_zona[zona][0][4]=72;
		  dibuja_zona();
		  COPIA_ZONA_MEMORIA(dir_muestra_dibujo1, dir_zona_pantalla);
		  break;
		}
	      }

	      choque=0;
	      if(mapa_teclado[0]==SALTO) {
		if(yA < 32) {
		  for(obj=1; obj<NUM_OBJETOS; obj++) {
		    if( ! (x[obj]-x[0]>=8 || x[0]-x[obj]>=8 || y[obj]>y[0]+8 || y[obj]<y[0]+8 || z[obj]-z[0]>=8 || z[0]-z[obj]>=8))
		      choque=1;
		  }
		  if(choque==0) { yA+=4; objetos_zona[zona][0][3]+=4; }
		}
	      }

              if(sentido==AUM_X) {
		pos_objeto[0]=xyz_bola_b[0];
		pos_objeto[1]=xyz_bola_b[1];
	      }
	      if(sentido==AUM_Z) {
		pos_objeto[0]=xyz_bola_a[0];
		pos_objeto[1]=xyz_bola_a[1];
	      }
	      if(sentido==DIS_X) {
		pos_objeto[0]=xyz_bola_d[0];
		pos_objeto[1]=xyz_bola_d[1];
	      }
	      if(sentido==DIS_Z) {
		pos_objeto[0]=xyz_bola_c[0];
		pos_objeto[1]=xyz_bola_c[1];
	      }
	      pos_objeto[4]=objetos_zona[zona][0][5];
	      pos_objeto[5]=objetos_zona[zona][0][6];
	    }

	    else
	    {
	      m=dist[n][1];

	      xA=objetos_zona[zona][m][2];
	      yA=objetos_zona[zona][m][3];
	      zA=objetos_zona[zona][m][4];

	      pos_objeto[0]=objetos_zona[zona][m][0];
	      pos_objeto[1]=objetos_zona[zona][m][1];
	      pos_objeto[4]=objetos_zona[zona][m][5];
	      pos_objeto[5]=objetos_zona[zona][m][6];
            }

	    pos_objeto[2]=144+((xA-zA)     << 1);
	    pos_objeto[3]= 21+ (xA+zA)-(yA << 1);

            DIBUJA_BLOQUE_CUT(pos_objeto, dir_dibujo1, dir_zona_pantalla);
          }

          VUELCA_PANTALLA(0,0, 0,0, 320,200, dir_zona_pantalla);

	  choque=0;
	  if(mapa_teclado[0]!=SALTO && objetos_zona[zona][0][3]>0 && y>0) {
	    for(obj=1; obj<NUM_OBJETOS; obj++) {
	      if( ! (x[obj]-x[0]>=8 || x[0]-x[obj]>=8 || y[obj]<y[0]-8 || y[obj]>y[0]-8 || z[obj]-z[0]>=8 || z[0]-z[obj]>=8))
		choque=1;
	    }
	    if(choque==0) objetos_zona[zona][0][3]--;
	  }
	}
	salir_al_dos();
}

void dibuja_zona(void)
{
  int bloq;

  BORRA_ZONA_MEMORIA(dir_muestra_dibujo1, 0);
  DIBUJA_BLOQUE(logotipo_filmation,   dir_dibujo1, dir_muestra_dibujo1);
  DIBUJA_BLOQUE(logotipo_parte3,      dir_dibujo1, dir_muestra_dibujo1);
  DIBUJA_BLOQUE(logotipo_goldy_games, dir_dibujo1, dir_muestra_dibujo1);

  switch(mapa[zona_z][zona_x])
  {
    case 0:
      break;
    case 1:
      for(bloq=0; mapa_zona_1[bloq][0]!=ULTIMO; bloq++)
	DIBUJA_BLOQUE_CUT(&mapa_zona_1[bloq][0], dir_dibujo1, dir_muestra_dibujo1);
      break;
    case 2:
      for(bloq=0; mapa_zona_2[bloq][0]!=ULTIMO; bloq++)
	DIBUJA_BLOQUE_CUT(&mapa_zona_2[bloq][0], dir_dibujo1, dir_muestra_dibujo1);
      break;
    case 3:
      for(bloq=0; mapa_zona_3[bloq][0]!=ULTIMO; bloq++)
	DIBUJA_BLOQUE_CUT(&mapa_zona_3[bloq][0], dir_dibujo1, dir_muestra_dibujo1);
      break;
    case 4:
      for(bloq=0; mapa_zona_4[bloq][0]!=ULTIMO; bloq++)
	DIBUJA_BLOQUE_CUT(&mapa_zona_4[bloq][0], dir_dibujo1, dir_muestra_dibujo1);
      break;
    case 5:
      for(bloq=0; mapa_zona_5[bloq][0]!=ULTIMO; bloq++)
	DIBUJA_BLOQUE_CUT(&mapa_zona_5[bloq][0], dir_dibujo1, dir_muestra_dibujo1);
      break;
  }
}

void salir_al_dos(void)
{
        asigna_modo_video(ALFANUMERICO);
        libera_memoria();
        UNSET_VECTORES();
        textcolor(WHITE); textbackground(BLUE);
        cprintf("Copyright (c) Goldy Games 1994. Jos‚ Antonio Acedo Mart¡n-Grande. Continuar  ...");
        gotoxy(1,24);
        exit(0);
}

void asigna_memoria(void)
{
        if((dir_carga_dibujos  =new char[320*200])==NULL) error_memoria();
        if((dir_dibujo1        =new char[320*200])==NULL) error_memoria();
        if((dir_muestra_dibujo1=new char[320*200])==NULL) error_memoria();
        if((dir_zona_pantalla  =new char[320*200])==NULL) error_memoria();
}

void libera_memoria(void)
{
        delete dir_carga_dibujos;
        delete dir_dibujo1;
        delete dir_muestra_dibujo1;
        delete dir_zona_pantalla;
}

void error_memoria(void)
{
        asigna_modo_video(ALFANUMERICO);
        libera_memoria();
        printf("No hay suficiente memoria. Libere programas residentes.");
        exit(1);
}

void error_fichero(void)
{
        asigna_modo_video(ALFANUMERICO);
        libera_memoria();
        printf("Error leyendo fichero .PCX");
        exit(1);
}

void asigna_modo_video(char modo)     /* asigna el modo de v¡deo indicado */
{                                     /* en la variable "modo"            */
        union REGS ent, sal;

        ent.h.al = modo;
        ent.h.ah = 0;
        int86(16, &ent, &sal);        /* funci¢n para asignar el modo de video */
}

void lee_ficheros(const char *file, char *dir_dibujo)
{
        char *dir;

        dir=dir_carga_dibujos;
        if((handle_dibujos = fopen(file, "rb"))==NULL) error_fichero();
        while(!feof(handle_dibujos)) { *dir++=getc(handle_dibujos); }
        fclose(handle_dibujos);
        descomprime_dibujo(dir_dibujo);
}

void descomprime_dibujo(char *dir_escritura)
{
        unsigned char  byte;
                 char *dir_lectura;
                 int   columnas, filas, contador;

        dir_lectura=dir_carga_dibujos+128;   /* inicio del dibujo comprimido */

        for(filas=200; filas>0; filas--)
        {
          columnas=320;
          dir_escritura-=columnas; dir_escritura+=320;
          while(columnas>0)
          {
	    byte=(unsigned)*dir_lectura++;

	    if(byte<=0xC0) { *dir_escritura++=byte; columnas--; }
	    else
	    {
	      contador=byte & 0x3F; byte=*dir_lectura++;
              for(; contador>0; contador--)
              {
                *dir_escritura++=byte; columnas--;
              }
            }
          }
        }
        asigna_rgb(dir_lectura+1);     /* remapea los 256 colores del dibujo */
}

void asigna_rgb(char *dir_lectura)
{
        struct   SREGS  seg;
        union     REGS  ent, sal;
        unsigned  int   n;
        long      int   dir;
                  char *dir_col;

        dir_col=dir_lectura;                      /* divide entre  */
        for(n=256*3; n>0; n--) {                  /* 4 los colores */
          *dir_col=*dir_col >> 2; dir_col++;
        }

        dir   =(long)dir_lectura;                 /* obtiene el segmento     */
        seg.es=(int)(dir >> 16);                  /* donde estan los colores */

        ent.h.al =  18;
        ent.h.ah =  16;
        ent.x.bx =   0;
        ent.x.cx = 256;
        ent.x.dx = (int)dir_lectura;       /* offset de los colores            */
        int86x(0x10, &ent, &sal, &seg);    /* funci¢n para asignar los colores */
}
